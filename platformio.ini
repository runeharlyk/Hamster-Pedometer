; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
description = Hamster Pedometer
data_dir = data
extra_configs = 
	factory_settings.ini
	features.ini
build_cache_dir = .pio/build_cache
default_envs = esp32dev

; ================================================================
; Project environments

[env:esp32dev]
board = esp32dev
board_build.partitions = min_spiffs.csv
build_flags =
    ${env.build_flags}
    -D LED_BUILTIN=2

[env:esp32-camera]
board = esp32cam
board_build.partitions = min_spiffs.csv
monitor_rts = 0
monitor_dtr = 0
build_flags=
    ${env.build_flags}
	-D USE_CAMERA=1
	-D CAMERA_MODEL_AI_THINKER=1
	-D SDA_PIN=14
	-D SCL_PIN=15

; ================================================================
; General environment section

[env]
framework = arduino
platform = espressif32 @ 6.6.0
monitor_speed = 115200
monitor_filters = 
	esp32_exception_decoder
	default
	colorize
build_flags = 
	${factory_settings.build_flags}
	${features.build_flags}
    -D BUILD_TARGET=\"$PIOENV\"
    -D APP_NAME=\"Hamster-Pedometer\" ; Must only contain characters from [a-zA-Z0-9-_] as this is converted into a filename
    -D APP_VERSION=\"0.0.0\" ; semver compatible version string
    -D ENABLE_CORS
    -D CORS_ORIGIN=\"*\"
	-D CORE_DEBUG_LEVEL=4
    -D SERVE_CONFIG_FILES
    -D EVENT_USE_JSON=1 ; Uncomment to use JSON instead of MessagePack for event messages. Default is MessagePack.
	-D register=
	-std=gnu++2a ; c++ 23
build_unflags = -std=gnu++11    
build_src_flags = 
	-Wformat=2
	-Wformat-truncation
	-Wstack-usage=4096
test_ignore = test_embedded
board_build.filesystem = littlefs
lib_compat_mode = strict
lib_deps = 
	ArduinoJson@>=7.0.0
    hoeken/PsychicHttp@^1.2.1
    https://github.com/theelims/PsychicMqttClient.git#0.1.1

; Uncomment to include the a Root CA SSL Certificate Bundle for all SSL needs
; Needs -D FT_DOWNLOAD_FIRMWARE=1 and -D FT_NTP=1
board_build.embed_files = src/certs/x509_crt_bundle.bin
; Source for SSL Cert Store can bei either downloaded from Mozilla with 'mozilla' ('https://curl.se/ca/cacert.pem')
; or from a curated Adafruit repository with 'adafruit' (https://raw.githubusercontent.com/adafruit/certificates/main/data/roots.pem)
; or complied from a 'folder' full of *.pem / *.dem files stored in the ./ssl_certs folder
board_ssl_cert_source = adafruit
extra_scripts = 
    pre:scripts/pre_build.py
    pre:scripts/build_app.py
    pre:scripts/generate_cert_bundle.py
    scripts/rename_fw.py

